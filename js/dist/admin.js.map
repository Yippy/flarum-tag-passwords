{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@datlechin/flarum-tag-passwords/webpack/bootstrap","webpack://@datlechin/flarum-tag-passwords/webpack/runtime/compat get default export","webpack://@datlechin/flarum-tag-passwords/webpack/runtime/define property getters","webpack://@datlechin/flarum-tag-passwords/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-tag-passwords/webpack/runtime/make namespace object","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['admin/app']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/extend']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['tags/models/Tag']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/Model']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['tags/components/EditTagModal']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['utils/Stream']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/components/Button']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/models/Group']\"","webpack://@datlechin/flarum-tag-passwords/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/models/Tag'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/components/EditTagModal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/Stream'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Group'];","import app from 'flarum/admin/app';\nimport { extend } from 'flarum/common/extend';\nimport Tag from 'flarum/tags/models/Tag';\nimport Model from 'flarum/common/Model';\nimport EditTagModal from 'flarum/tags/components/EditTagModal';\nimport Stream from 'flarum/utils/Stream';\nimport icon from 'flarum/common/helpers/icon';\nimport Button from 'flarum/common/components/Button';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Group from 'flarum/common/models/Group';\n\napp.initializers.add('datlechin/flarum-tag-passwords', () => {\n  app.extensionData\n    .for('datlechin-tag-passwords')\n    .registerSetting({\n      setting: 'flarum-tag-passwords.display_unlock_icon',\n      label: app.translator.trans('datlechin-tag-passwords.admin.setting.display_unlock_icon'),\n      type: 'switch',\n    })\n    .registerSetting({\n      setting: 'flarum-tag-passwords.display_protected_tag_from_sidebar',\n      label: app.translator.trans('datlechin-tag-passwords.admin.setting.display_protected_tag_from_sidebar'),\n      type: 'switch',\n    })\n    .registerSetting({\n      setting: 'flarum-tag-passwords.display_protected_tag_from_tags_page',\n      label: app.translator.trans('datlechin-tag-passwords.admin.setting.display_protected_tag_from_tags_page'),\n      type: 'switch',\n    });\n\n  Tag.prototype.isPasswordProtected = Model.attribute('isPasswordProtected');\n  Tag.prototype.isGroupProtected = Model.attribute('isGroupProtected');\n  Tag.prototype.password = Model.attribute('password');\n  Tag.prototype.protectedGroups = Model.attribute('protectedGroups');\n\n  extend(EditTagModal.prototype, 'oninit', function () {\n    this.isPasswordProtected = Stream(this.tag.password() || false);\n    this.password = Stream(this.tag.password() || '');\n    this.isGroupProtected = Stream(this.tag.protectedGroups() || false);\n    this.protectedGroups = this.tag.protectedGroups() ? JSON.parse(this.tag.protectedGroups()) : [];\n  });\n\n  extend(EditTagModal.prototype, 'fields', function (items) {\n    items.add(\n      'protectedType',\n      <div className=\"Form-group\">\n        <label>{app.translator.trans('datlechin-tag-passwords.admin.edit_tag.protected_label')}</label>\n        <div>\n          <label className=\"checkbox\">\n            <input type=\"checkbox\" bidi={this.isPasswordProtected} />\n            {app.translator.trans('datlechin-tag-passwords.admin.edit_tag.password_protected_label')}\n          </label>\n          <label className=\"checkbox\">\n            <input type=\"checkbox\" bidi={this.isGroupProtected} />\n            {app.translator.trans('datlechin-tag-passwords.admin.edit_tag.group_protected_label')}\n          </label>\n          {this.isPasswordProtected() && !this.isGroupProtected() ? (\n            <input\n              className=\"FormControl\"\n              bidi={this.password}\n              placeholder={app.translator.trans('datlechin-tag-passwords.admin.edit_tag.password_placeholder_label')}\n            />\n          ) : (\n            ''\n          )}\n\n          {this.isGroupProtected() && !this.isPasswordProtected() ? (\n            <table className=\"GroupListTable\">\n              <tbody>\n                {this.protectedGroups === null ? (\n                  <tr>\n                    <td>\n                      <LoadingIndicator />\n                    </td>\n                  </tr>\n                ) : (\n                  this.protectedGroups.map((item, index) => (\n                    <tr>\n                      <td>\n                        {app.store\n                          .all('groups')\n                          .filter((group) => group.id() == item.id)\n                          .map((group) => group.namePlural())}\n                      </td>\n                      <td>\n                        <button\n                          className=\"Button Button--danger\"\n                          onclick={(event) => {\n                            event.preventDefault(); // Do not close the settings modal\n                            this.protectedGroups.splice(index, 1);\n                            m.redraw();\n                          }}\n                        >\n                          {icon('fas fa-times')}\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n                <tr>\n                  <td colspan=\"5\">\n                    <Dropdown label={app.translator.trans('datlechin-tag-passwords.admin.edit_tag.select_group')} buttonClassName=\"Button\">\n                      {app.store\n                        .all('groups')\n                        .filter((group) => {\n                          if (group.id() === Group.MEMBER_ID || group.id() === Group.GUEST_ID) {\n                            // Do not suggest \"virtual\" groups\n                            return false;\n                          }\n\n                          // Do not suggest groups already in use\n                          var isFound = false;\n                          if (Array.isArray(this.protectedGroups)) {\n                            this.protectedGroups.forEach((protectedGroup) => {\n                              if (protectedGroup.id == group.id()) {\n                                isFound = true;\n                              }\n                            });\n                          }\n                          return !isFound;\n                        })\n                        .map((group) => (\n                          <Button\n                            onclick={() => {\n                              this.protectedGroups.push({ id: Number(group.id()) });\n                              m.redraw();\n                            }}\n                          >\n                            {group.namePlural()}\n                          </Button>\n                        ))}\n                    </Dropdown>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n    );\n  });\n\n  extend(EditTagModal.prototype, 'submitData', function (data) {\n    data.password = this.isPasswordProtected() ? this.password() : null;\n    data.protected_groups = this.isGroupProtected() && this.protectedGroups.length > 0 ? JSON.stringify(this.protectedGroups) : null;\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","registerSetting","setting","label","trans","type","Tag","isPasswordProtected","Model","isGroupProtected","password","protectedGroups","extend","EditTagModal","this","Stream","tag","JSON","parse","items","_this","m","className","bidi","placeholder","LoadingIndicator","map","item","index","all","filter","group","id","namePlural","onclick","event","preventDefault","splice","redraw","icon","colspan","Dropdown","buttonClassName","Group","isFound","Array","isArray","forEach","protectedGroup","Button","push","Number","data","protected_groups","length","stringify"],"sourceRoot":""}