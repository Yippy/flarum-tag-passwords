{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@datlechin/flarum-tag-passwords/webpack/bootstrap","webpack://@datlechin/flarum-tag-passwords/webpack/runtime/compat get default export","webpack://@datlechin/flarum-tag-passwords/webpack/runtime/define property getters","webpack://@datlechin/flarum-tag-passwords/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-tag-passwords/webpack/runtime/make namespace object","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['admin/app']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/extend']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['tags/models/Tag']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/Model']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['tags/components/EditTagModal']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['utils/Stream']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/components/Button']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@datlechin/flarum-tag-passwords/external root \"flarum.core.compat['common/models/Group']\"","webpack://@datlechin/flarum-tag-passwords/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/models/Tag'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/components/EditTagModal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/Stream'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Group'];","import app from 'flarum/admin/app';\nimport { extend } from 'flarum/common/extend';\nimport Tag from 'flarum/tags/models/Tag';\nimport Model from 'flarum/common/Model';\nimport EditTagModal from 'flarum/tags/components/EditTagModal';\nimport Stream from 'flarum/utils/Stream';\nimport icon from 'flarum/common/helpers/icon';\nimport Button from 'flarum/common/components/Button';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Group from 'flarum/common/models/Group';\n\napp.initializers.add('datlechin/flarum-tag-passwords', () => {\n  app.extensionData\n    .for('datlechin-tag-passwords')\n    .registerSetting({\n        setting: 'flarum-tag-passwords.display_unlock_icon',\n        label: app.translator.trans('datlechin-tag-passwords.admin.setting.display_unlock_icon'),\n        type: 'switch',\n    })\n    .registerSetting({\n        setting: 'flarum-tag-passwords.display_protected_tag_from_sidebar',\n        label: app.translator.trans('datlechin-tag-passwords.admin.setting.display_protected_tag_from_sidebar'),\n        type: 'switch',\n    })\n    .registerSetting({\n        setting: 'flarum-tag-passwords.display_protected_tag_from_tags_page',\n        label: app.translator.trans('datlechin-tag-passwords.admin.setting.display_protected_tag_from_tags_page'),\n        type: 'switch',\n    });\n\n    \n  Tag.prototype.isPasswordProtected = Model.attribute('isPasswordProtected');\n  Tag.prototype.isGroupProtected = Model.attribute('isGroupProtected');\n  Tag.prototype.password = Model.attribute('password');\n  Tag.prototype.protectedGroupIds = Model.attribute('protectedGroupIds');\n\n  extend(EditTagModal.prototype, 'oninit', function () {\n    this.isPasswordProtected = Stream(this.tag.password() || false);\n    this.password = Stream(this.tag.password() || '');\n    this.isGroupProtected = Stream(this.tag.protectedGroupIds() || false);\n    this.protectedGroupIds = this.tag.protectedGroupIds() != null? this.tag.protectedGroupIds().split(\",\"): [];\n  });\n\n  extend(EditTagModal.prototype, 'fields', function (items) {\n    items\n      .add(\n        'protectedType',\n        <div className=\"Form-group\">\n          <label>{app.translator.trans('datlechin-tag-passwords.admin.edit_tag.protected_label')}</label>\n          <div>\n            <label className=\"checkbox\">\n              <input type=\"checkbox\" bidi={this.isPasswordProtected} />\n              {app.translator.trans('datlechin-tag-passwords.admin.edit_tag.password_protected_label')}\n            </label>\n            <label className=\"checkbox\">\n              <input type=\"checkbox\" bidi={this.isGroupProtected} />\n              {app.translator.trans('datlechin-tag-passwords.admin.edit_tag.group_protected_label')}\n            </label>\n            {this.isPasswordProtected() && !this.isGroupProtected() ? (\n              <input\n                className=\"FormControl\"\n                bidi={this.password}\n                placeholder={app.translator.trans('datlechin-tag-passwords.admin.edit_tag.password_placeholder_label')}\n              />\n            ) : (\n              ''\n            )}\n\n            {this.isGroupProtected() && !this.isPasswordProtected() ?\n              m('table.GroupListTable', m('tbody', [\n        this.protectedGroupIds === null ? m('tr', m('td', LoadingIndicator.component())) : this.protectedGroupIds.map((item, index) => m('tr', [\n              m('td', app.store.all('groups').filter(group => group.id() == Number(item)).map(group => group.namePlural())),\n              m('td', m('button.Button.Button--danger', {\n                  onclick: event => {\n                      event.preventDefault(); // Do not close the settings modal\n                      this.protectedGroupIds.splice(index, 1);\n                      m.redraw();\n                  },\n              }, icon('fas fa-times'))),\n          ])),\n          m('tr', m('td', {\n              colspan: 5,\n          }, Dropdown.component({\n              label: app.translator.trans('datlechin-tag-passwords.admin.edit_tag.select_group'),\n              buttonClassName: 'Button',\n          }, app.store.all('groups')\n              .filter(group => {\n                  if (group.id() === Group.MEMBER_ID || group.id() === Group.GUEST_ID) {\n                      // Do not suggest \"virtual\" groups\n                      return false;\n                  }\n\n                  // Do not suggest groups already in use\n                  var isFound = false;\n                  if (Array.isArray(this.protectedGroupIds)) {\n                    this.protectedGroupIds.forEach((groupId) => {\n                      if (groupId == group.id()) {\n                        isFound = true;\n                      }\n                    });\n                  }\n                  return !isFound;\n              })\n              .map(group => Button.component({\n                  onclick: () => {\n                    this.protectedGroupIds.push(group.id());\n                    m.redraw();\n                  },\n              }, group.namePlural()))))),\n            ]))\n            :''}\n          </div>\n        </div>\n    )\n  });\n\n  extend(EditTagModal.prototype, 'submitData', function (data) {\n    data.password = this.isPasswordProtected() ? this.password() : null;\n    data.protected_group_ids = this.isGroupProtected() && this.protectedGroupIds.length > 0 ? this.protectedGroupIds.toString() : null;\n  });\n});"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","registerSetting","setting","label","type","Tag","Model","extend","EditTagModal","this","isPasswordProtected","Stream","tag","password","isGroupProtected","protectedGroupIds","split","items","_this","add","m","className","bidi","placeholder","LoadingIndicator","component","map","item","index","filter","group","id","Number","namePlural","onclick","event","preventDefault","splice","redraw","icon","colspan","Dropdown","buttonClassName","Group","isFound","Array","isArray","forEach","groupId","Button","push","data","protected_group_ids","length","toString"],"sourceRoot":""}